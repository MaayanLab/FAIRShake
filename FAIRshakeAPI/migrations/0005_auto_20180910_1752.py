# Generated by Django 2.0.7 on 2018-09-10 17:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import extensions.versions_ex.models
import versions.fields
import uuid

class Migration(migrations.Migration):

    dependencies = [
        ('FAIRshakeAPI', '0004_auto_20180823_1910'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerNew',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('identity', models.UUIDField()),
                ('version_start_date', models.DateTimeField()),
                ('version_end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('version_birth_date', models.DateTimeField()),
                ('answer', models.TextField(blank=True, default='')),
                ('comment', models.TextField(blank=True, default='')),
                ('url_comment', models.TextField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'answer',
                'verbose_name_plural': 'answers',
                'ordering': ['id'],
            },
            managers=[
                ('objects', extensions.versions_ex.models.VersionManagerEx()),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentNew',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('identity', models.UUIDField()),
                ('version_start_date', models.DateTimeField()),
                ('version_end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('version_birth_date', models.DateTimeField()),
                ('methodology', models.TextField(blank=True, choices=[('self', 'Digital Object Creator Assessment'), ('user', 'Independent User Assessment'), ('auto', 'Automatic Assessment'), ('test', 'Test Assessment')], max_length=16)),
                ('assessor', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'assessment',
                'verbose_name_plural': 'assessments',
                'ordering': ['id'],
            },
            managers=[
                ('objects', extensions.versions_ex.models.VersionManagerEx()),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentRequestNew',
            fields=[
                ('id', models.UUIDField(primary_key=True, default=uuid.uuid4, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('assessment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='request', to='FAIRshakeAPI.AssessmentNew')),
                ('requestor', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'assessment_request',
                'verbose_name_plural': 'assessment_requests',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='DigitalObjectNew',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('identity', models.UUIDField()),
                ('version_start_date', models.DateTimeField()),
                ('version_end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('version_birth_date', models.DateTimeField()),
                ('description', models.TextField(blank=True, default='')),
                ('image', models.CharField(blank=True, default='', max_length=255)),
                ('tags', models.CharField(blank=True, max_length=255)),
                ('type', models.CharField(blank=True, choices=[('', 'Other'), ('any', 'Any Digital Object'), ('data', 'Dataset'), ('repo', 'Repository'), ('test', 'Test Object'), ('tool', 'Tool')], default='', max_length=16)),
                ('url', models.CharField(max_length=255)),
                ('title', models.CharField(blank=True, default='', max_length=255)),
                ('fairsharing', models.CharField(blank=True, default='', max_length=255)),
                ('authors', versions.fields.VersionedManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'digital_object',
                'verbose_name_plural': 'digital_objects',
                'ordering': ['id'],
            },
            managers=[
                ('objects', extensions.versions_ex.models.VersionManagerEx()),
            ],
        ),
        migrations.CreateModel(
            name='MetricNew',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('identity', models.UUIDField()),
                ('version_start_date', models.DateTimeField()),
                ('version_end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('version_birth_date', models.DateTimeField()),
                ('title', models.CharField(max_length=255)),
                ('url', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('image', models.CharField(blank=True, default='', max_length=255)),
                ('tags', models.CharField(blank=True, max_length=255)),
                ('type', models.CharField(blank=True, choices=[('yesnobut', 'Yes no or but question'), ('text', 'Simple textbox input'), ('url', 'A url input')], default='yesnobut', max_length=16)),
                ('license', models.CharField(blank=True, default='', max_length=255)),
                ('rationale', models.TextField(blank=True, default='')),
                ('principle', models.CharField(blank=True, choices=[('F', 'Findability'), ('A', 'Accessibility'), ('I', 'Interoperability'), ('R', 'Reusability')], default='', max_length=16)),
                ('fairmetrics', models.CharField(blank=True, default='', max_length=255)),
                ('authors', versions.fields.VersionedManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'metric',
                'verbose_name_plural': 'metrics',
                'ordering': ['id'],
            },
            managers=[
                ('objects', extensions.versions_ex.models.VersionManagerEx()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectNew',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('identity', models.UUIDField()),
                ('version_start_date', models.DateTimeField()),
                ('version_end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('version_birth_date', models.DateTimeField()),
                ('title', models.CharField(max_length=255)),
                ('url', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('image', models.CharField(blank=True, default='', max_length=255)),
                ('tags', models.CharField(blank=True, max_length=255)),
                ('type', models.CharField(blank=True, choices=[('', 'Other'), ('any', 'Any Digital Object'), ('data', 'Dataset'), ('repo', 'Repository'), ('test', 'Test Object'), ('tool', 'Tool')], default='', max_length=16)),
                ('authors', versions.fields.VersionedManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('digital_objects', versions.fields.VersionedManyToManyField(blank=True, related_name='projects', to='FAIRshakeAPI.DigitalObjectNew')),
            ],
            options={
                'verbose_name': 'project',
                'verbose_name_plural': 'projects',
                'ordering': ['id'],
            },
            managers=[
                ('objects', extensions.versions_ex.models.VersionManagerEx()),
            ],
        ),
        migrations.CreateModel(
            name='RubricNew',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('identity', models.UUIDField()),
                ('version_start_date', models.DateTimeField()),
                ('version_end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('version_birth_date', models.DateTimeField()),
                ('title', models.CharField(max_length=255)),
                ('url', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('image', models.CharField(blank=True, default='', max_length=255)),
                ('tags', models.CharField(blank=True, max_length=255)),
                ('type', models.CharField(blank=True, choices=[('', 'Other'), ('any', 'Any Digital Object'), ('data', 'Dataset'), ('repo', 'Repository'), ('test', 'Test Object'), ('tool', 'Tool')], default='', max_length=16)),
                ('license', models.CharField(blank=True, default='', max_length=255)),
                ('authors', versions.fields.VersionedManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('metrics', versions.fields.VersionedManyToManyField(blank=True, related_name='rubrics', to='FAIRshakeAPI.MetricNew')),
            ],
            options={
                'verbose_name': 'rubric',
                'verbose_name_plural': 'rubrics',
                'ordering': ['id'],
            },
            managers=[
                ('objects', extensions.versions_ex.models.VersionManagerEx()),
            ],
        ),
        migrations.AddField(
            model_name='digitalobjectnew',
            name='rubrics',
            field=versions.fields.VersionedManyToManyField(blank=True, related_name='digital_objects', to='FAIRshakeAPI.RubricNew'),
        ),
        migrations.AddField(
            model_name='assessmentnew',
            name='project',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assessments', to='FAIRshakeAPI.ProjectNew'),
        ),
        migrations.AddField(
            model_name='assessmentnew',
            name='rubric',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='FAIRshakeAPI.RubricNew'),
        ),
        migrations.AddField(
            model_name='assessmentnew',
            name='target',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='FAIRshakeAPI.DigitalObjectNew'),
        ),
        migrations.AddField(
            model_name='answernew',
            name='assessment',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='FAIRshakeAPI.AssessmentNew'),
        ),
        migrations.AddField(
            model_name='answernew',
            name='metric',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='FAIRshakeAPI.MetricNew'),
        ),
    ]
